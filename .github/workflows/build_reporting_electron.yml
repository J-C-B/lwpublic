name: Build/Release Electron App
on: 
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: write

defaults:
  run:
    working-directory: ./Lacework-Compliance-Reporter

jobs:
  build:
    name: Build Electron App
    runs-on: windows-latest
    timeout-minutes: 30
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Lacework-Compliance-Reporter/electron/package-lock.json
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Setup virtual environment
        shell: bash
        run: |
          python -m venv venv
          if [ "$RUNNER_OS" = "Windows" ]; then
            venv/Scripts/activate
          else
            source venv/bin/activate
          fi
          pip install -r requirements.txt
          
      - name: Install Electron dependencies
        working-directory: ./Lacework-Compliance-Reporter/electron
        run: npm ci
        
      - name: Build Electron app
        working-directory: ./Lacework-Compliance-Reporter/electron
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build
          path: ./Lacework-Compliance-Reporter/dist/
          retention-days: 1

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-build
          path: ./dist
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Lacework Compliance Reporter ${{ github.ref_name }}
            
            ### What's New
            - Electron desktop application
            - Windows installer (.exe)
            
            ### Installation
            Download and run the Windows installer above.
            
            ### Changes
            - Built with Electron for desktop distribution
            - Includes all Python dependencies
            - Streamlit web interface wrapped in desktop app
          draft: false
          prerelease: false
          
      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Lacework Compliance Reporter Setup *.exe
          asset_name: Lacework-Compliance-Reporter-Setup-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream 
